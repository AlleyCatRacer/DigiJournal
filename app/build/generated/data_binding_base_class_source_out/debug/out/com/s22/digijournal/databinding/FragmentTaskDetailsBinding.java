// Generated by view binder compiler. Do not edit!
package com.s22.digijournal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.s22.digijournal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTaskDetailsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final FloatingActionButton fab;

  @NonNull
  public final TextView taskDetailsDeadline;

  @NonNull
  public final TextView taskDetailsDeadlineLabel;

  @NonNull
  public final TextView taskDetailsDetailLabel;

  @NonNull
  public final TextView taskDetailsDetailText;

  @NonNull
  public final Button taskDetailsEditButton;

  @NonNull
  public final TextView taskDetailsTaskName;

  private FragmentTaskDetailsBinding(@NonNull ScrollView rootView,
      @NonNull FloatingActionButton fab, @NonNull TextView taskDetailsDeadline,
      @NonNull TextView taskDetailsDeadlineLabel, @NonNull TextView taskDetailsDetailLabel,
      @NonNull TextView taskDetailsDetailText, @NonNull Button taskDetailsEditButton,
      @NonNull TextView taskDetailsTaskName) {
    this.rootView = rootView;
    this.fab = fab;
    this.taskDetailsDeadline = taskDetailsDeadline;
    this.taskDetailsDeadlineLabel = taskDetailsDeadlineLabel;
    this.taskDetailsDetailLabel = taskDetailsDetailLabel;
    this.taskDetailsDetailText = taskDetailsDetailText;
    this.taskDetailsEditButton = taskDetailsEditButton;
    this.taskDetailsTaskName = taskDetailsTaskName;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTaskDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTaskDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_task_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTaskDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fab;
      FloatingActionButton fab = ViewBindings.findChildViewById(rootView, id);
      if (fab == null) {
        break missingId;
      }

      id = R.id.task_details_deadline;
      TextView taskDetailsDeadline = ViewBindings.findChildViewById(rootView, id);
      if (taskDetailsDeadline == null) {
        break missingId;
      }

      id = R.id.task_details_deadline_label;
      TextView taskDetailsDeadlineLabel = ViewBindings.findChildViewById(rootView, id);
      if (taskDetailsDeadlineLabel == null) {
        break missingId;
      }

      id = R.id.task_details_detail_label;
      TextView taskDetailsDetailLabel = ViewBindings.findChildViewById(rootView, id);
      if (taskDetailsDetailLabel == null) {
        break missingId;
      }

      id = R.id.task_details_detail_text;
      TextView taskDetailsDetailText = ViewBindings.findChildViewById(rootView, id);
      if (taskDetailsDetailText == null) {
        break missingId;
      }

      id = R.id.task_details_edit_button;
      Button taskDetailsEditButton = ViewBindings.findChildViewById(rootView, id);
      if (taskDetailsEditButton == null) {
        break missingId;
      }

      id = R.id.task_details_taskName;
      TextView taskDetailsTaskName = ViewBindings.findChildViewById(rootView, id);
      if (taskDetailsTaskName == null) {
        break missingId;
      }

      return new FragmentTaskDetailsBinding((ScrollView) rootView, fab, taskDetailsDeadline,
          taskDetailsDeadlineLabel, taskDetailsDetailLabel, taskDetailsDetailText,
          taskDetailsEditButton, taskDetailsTaskName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
